// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model;

namespace Model.Migrations
{
    [DbContext(typeof(ProfileDbContext))]
    [Migration("20201227062506_AddedArticleType")]
    partial class AddedArticleType
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Model.Domain.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<int?>("TypeNavigationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeNavigationId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("Model.Domain.ArticleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ArticleTypes");
                });

            modelBuilder.Entity("Model.Domain.Article", b =>
                {
                    b.HasOne("Model.Domain.ArticleType", "TypeNavigation")
                        .WithMany("ArticleNavigations")
                        .HasForeignKey("TypeNavigationId");

                    b.Navigation("TypeNavigation");
                });

            modelBuilder.Entity("Model.Domain.ArticleType", b =>
                {
                    b.Navigation("ArticleNavigations");
                });
#pragma warning restore 612, 618
        }
    }
}
